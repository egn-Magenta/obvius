<& /shared/editengine2/init, editscheme=>$groups, relation=>'groups', edges=>$edges &>
<%once>
my $users = {
              type => 'scheme/table',
              display => [
                          {name=>'name', content=>'data', label=>'Name'},
                         ],
              storage => {
                          organization => {
                                           class => 'DbTable',
                                           source=>'users',
                                           identifiers=>[qw(id)],
                                           sort        => 'name',
                                          },
                          data => {
                                   id   => { type => 'integer' },
                                   name => { type => 'line'    },
                                  },
                         },
	           post_execute_callback => '/action/users:clear_user_cache',
             };

my $memberships = {
                type => 'scheme/table',
                storage => {
                            organization => {
                                             class => 'DbTable',
                                             source=>'grp_user',
                                             identifiers=>[qw(user grp)],
                                            },
                            data => {
                                     grp  => { type => 'integer' },
                                     user => { type => 'integer' },
                                    },
                           },
	           post_execute_callback => '/action/users:clear_user_cache',
               };


my $members = {
               type => 'template/subset',
               arguments => {
                             set => 'set',
                             subset => 'checks',
                             subset_mappings => {
                                                 id => 'user',
                                                },
                             add_function => 'create',
                             subtract_function => 'remove',
                            },
               storage => {
                           organization => {
                                            class => 'Template',
                                            identifiers => [qw(gid)],
                                           },
                           functions => {
                                         execute => {
                                                     label => 'Update',
                                                    },
                                        },
                           data => {
                                    gid => { type => 'integer' },
                                   },
                               },
               relations => {
                             set => {
                                     scheme => $users,
                                     projection => 'filter',
                                     mappings => {},
                                    },
                             checks => {
                                        scheme => $memberships,
                                        projection => 'pipe',
                                        mappings => {gid => 'grp'},
                                       },
                            },
              };

my $group_storage = {
                     organization => {
                                      class => 'DbTable',
                                      source=>'groups',
                                      identifiers=>[qw(id)],
                                     },
                     data => {
                              id    => { type => 'integer' },
                              name  => { type => 'line'   , validation_regexp => '^[\w_\d][\w_ \d]+[\w_\d]$'}
                             },
	             post_execute_callback => '/action/users:clear_user_cache',	

                    };


my $input_display = [
                     { name=>'name',   content=>'data',   label=>'Name'    },
                    ];


my $create_group = {
                    type => 'scheme/editsheet',
                    display => $input_display,
                    storage => {
                                %$group_storage,
                                functions => {
                                              create => { label => 'Create' }
                                             },
                               },
                   };


my $update_group = {
                    type => 'scheme/editsheet',
                    display => $input_display,
                    storage => {
                                %$group_storage,
                                functions => {
                                              update => { label => 'Update' }
                                             },
                               },
                   };


my $delete_group = {
                    type => 'scheme/editsheet',
                    display => [
                                { name=>'name',   content=>'data', label=>'Name',   style=>{context=>'block',disabled=>'1'} },
                               ],
                    storage => {
                                %$group_storage,
                                functions => {
                                              remove => { label => 'Delete' }
                                             },
                               },
	            callback => '/action/groups:delete',
                    post_execute_callback => '/action/users:clear_user_cache',	

                   };

my $input_form = {
              type => 'template/composite',
              label => 'Group data',
              display => [
                          {name=>'group',  content=>'scheme', style=>{context=>'block',open=>'1'} },
                          {name=>'users',  content=>'scheme', style=>{context=>'block',open=>'1'}, label=>'Users', },
                         ],

            };

my $users_relation = {
                      scheme => $members,
                      projection => 'pipe',
                      mappings => {
                                   gid => 'gid',
                                  },
                     };


my $input_storage = {
                     organization => {
                                      class => 'Template',
                                      identifiers=>[qw(gid)]
                                     },
                     data => {
                              gid => { type => 'integer' },
                             },
                    };

my $create = {
              %$input_form,
              storage => {
                          %$input_storage,
                          functions => {
                                        execute => {
                                                    label => 'Create',
                                                   },
                                       },
                         },
              relations => {
                            users => $users_relation,
                            group => {
                                      scheme => $create_group,
                                      projection => 'pipe',
                                      mappings => {
                                                   gid => 'id',
                                                  },
                                     },
                          },
             };


my $update = {
              %$input_form,
              storage => {
                          %$input_storage,
                          functions => {
                                        execute => {
                                                    label => 'Update',
                                                   },
                                       },
                         },
              relations => {
                            users => $users_relation,
                            group => {
                                      scheme => $update_group,
                                      projection => 'pipe',
                                      mappings => {
                                                   gid => 'id',
                                                  },
                                     },
                          },
             };

my $groups = {
              type => 'scheme/table',
              label => 'Groups',
              display => [
                          {name=>'id',    content=>'data',   label=>'Id'    , filter => 'int'},
                          {name=>'name',  content=>'data',   label=>'Name'  , filter => 'str'},
                          {name=>'users', content=>'scheme', label=>'Users' },
                         ],
              storage => {
                          %$group_storage,
                          functions => {
                                        create => {
                                                   label => 'Create new',
                                                   relation => 'create',
                                                   anonymous => '1',
                                                  },
                                        update => {
                                                   label => 'Edit',
                                                   relation => 'edit',
                                                  },
                                        remove => {
                                                   label => 'Delete',
                                                   relation => 'delete',
                                                  }
                                       },
                         },
              relations => {
                            create => {
                                       scheme => $create,
                                       projection => 'pipe',
                                       mappings => {
                                                    id => 'gid',
                                                   },
                                      },
                            edit => {
                                     scheme => $update,
                                     projection => 'pipe',
                                     mappings => {
                                                  id => 'gid',
                                                 },
                                    },
                            delete => {
                                       scheme => $delete_group,
                                       projection => 'pipe',
                                      },
                            users => {
                                      scheme => $members,
                                      projection => 'pipe',
                                      mappings => {
                                                   id => 'gid',
                                                  },
                                     },
                           },
             };



my $edges = {
             'groups:create:group[create]store' => {
                                                    'groups:create:users[execute]store' => {
                                                                                            merge     => 'insert',
                                                                                            obj_maps  => {id=>'gid'},
                                                                                            data_maps => {id=>'grp'},
                                                                                           },
                                                   },
            };
</%once>
%
<%init>
$m->comp('/default/check_access', can=>'can_create_new_group');

$r->pnotes('obvius_session')->{action}='editengine';

$r->notes(inactive_handlingarea=>1);
$r->notes(inactive_path=>1);
$r->notes(inactive_subdocs=>1);
$r->notes(inactive_versions=>1);
$r->notes(inactive_information=>1);
$r->notes(inactive_editing=>1);
$r->notes(inactive_newsboxes=>1);
</%init>

<%method delete>
<%args>
$relations
$storage
$editscheme
$session
$history
</%args>
<%init>
if ( $relations-> {delete}-> {id} < 3) {
	$m->comp('/shared/set_status_message', status=>'WARNING', message=>
		'This group is important for proper system functioning and may not be deleted' );
        $m->comp('/shared/redirect/', location=>"./?obvius_command_groups=1&obvius_session_id=$session->{_session_id}");
}	
</%init>
</%method>

