<% $m->call_next %>
% print STDERR "\n\n";
%
<%args>
</%args>
%
<%method link>
<%args>
$link=>undef
$text=>undef
$title=>''
$ghosted=>0
$bold=>0
$ghosted_class=>'ghosted'
$class=>undef
$tabindex=>undef
$accesskey=>undef
$no_translation=>undef
</%args>
% $text = $m->scomp('SELF:msg', text=>$text) unless($no_translation);
% $title=' title="' . $title . '"' if ($title);
% $class=(defined $class ? " class=\"$class\"" : '');
% $tabindex=(defined $tabindex ? (' tabindex="' . $tabindex . '"') : '');
% $accesskey=(defined $accesskey ? " accesskey='$accesskey'" : '');
% if ($bold) {
<strong>
% }
% if ($ghosted) {
<span class="<% $ghosted_class %>"<% $title %>><% $text %></span>
% }
% else {
<a href="<% $link %>"<% $title %><% $class %><% $tabindex %><% $accesskey %>><% $text %></a>
% }
% if ($bold) {
</strong>
% }
</%method>
%
<%method redirect>
% if ($r->notes('redirect')) {
<META HTTP-EQUIV="Refresh" CONTENT="0;url=<% $r->notes('redirect') %>">
% }
</%method>
%
<%method javascript>
// submithandler function
var onsubmit_array = new Array();

function submit_page() {
    for(var i=0;i < onsubmit_array.length;i++) {
        onsubmit_array[i]();
    }
    document.pageform.submit();
}

// onloadhandler function
var onload_array = new Array();

function onload_handler() {
    for(var i=0;i < onload_array.length;i++) {
        onload_array[i]();
    }
}


function OpenWin(url, w, h) {
    window.name="main";
    if (w == null || w == 0) w = 350;
    if (h == null || h == 0) h = 450;
    features = ('toolbar=0,location=0,directories=0,status=0,'
	+'menubar=0,scrollbars=1,resizable=1,copyhistory=0,'
	+'width='+w+',height='+h);
    window.open (url + '', '', features)
}

function OpenWinFull(url, w, h) {
    window.name="main";
    if (w == null || w == 0) w = 800;
    if (h == null || h == 0) h = 600;
    features = ('toolbar=1,location=1,directories=0,status=1,'
	+'menubar=1,scrollbars=1,resizable=1,copyhistory=0,'
	+'width='+w+',height='+h);
    window.open (url + '', '', features)
}

function gotopage(link) {
    window.opener.location.href=link;
    close(1);
}

function adjust_opener_field(field, value) {
    field.value = value;
    close(1);
}

function reset_field(field) {
    field.value = field.defaultValue;
}

function reset_checkbox(checkbox) {
    checkbox.checked = checked.defaultChecked;
}

function reset_menu(menu) {
    for (var i = 0; i < menu.length; i++) {
	if (menu.options[i].defaultSelected == true) {
	    menu.options[i].selected=true;
	} else {
	    menu.options[i].selected=false;
	}
    }
}
</%method>
%
<%method title>
% my $title=$vdoc->Title;
% $title=$vdoc->field('Short_title') unless ($title);
% if ($title) {
<% $title %>
% } else {
Admin
% }
</%method>
%
<%method id><% $r->pnotes('document')->Id %></%method>
%
% # <!-- #translations translations.xml da,en -->
%
<%method left_margin>28</%method>
<%method right_margin>28</%method>
<%method above_title_spacing>20</%method>
<%method below_title_spacing>20</%method>
<%method above_footer_spacing>25</%method>
<%method left_menu_width>150</%method>
<%method right_menu_width>150</%method>
%
<%method msg>
<%args>
$text
</%args>
<%init>
$text =~ s/\r//g;
$text =~ s/\n/ /g;
$text = $r-> pnotes('site')->translate( $text);
$m->out($text);
return $text;
</%init>
</%method>
%
<%method shorten><%args>
$text
$len
$post=>' ...'
</%args>
<% $text %><%init>
  unless( length($text) <= $len ) {
    substr($text, $len) = '';
    $text .= $post;
  }
</%init></%method>
%
<%method menu_left_separator>
<& SELF:menu_separator, menu_width=>'SELF:left_menu_width' &>
</%method>
%
<%method menu_right_separator>
<& SELF:menu_separator, menu_width=>'SELF:right_menu_width' &>
</%method>
%
<%method menu_separator>
<%args>
$menu_width
</%args>
<TR>
 <TD COLSPAN="2" CLASS="sublevelsep" HEIGHT="1" WIDTH="<& $menu_width &>"
  BACKGROUND="/grafik/admin/1x1black.gif"><IMG SRC="/grafik/admin/1x1.gif"
  HEIGHT="1" width="<& $menu_width &>" ALT=""></TD>
</TR>
</%method>
%
<%method menu_box_spacer>
<TR><TD colspan=2 HEIGHT=20></TD></TR>
</%method>
%
<%method help_text_language>
% # FIXME!
da
</%method>
%
<%method menu_box_begin>
<%args>
$title
$no_obviushelp=>0
</%args>
<TR><TD CLASS="subleveltitle">&nbsp;<& SELF:msg, text=>$title &></TD>
<TD CLASS="subleveltitlehelp">
% if ($no_obviushelp) {
 
% } else {
<a href="javascript:OpenWin('http://obviushelp.magenta-aps.dk/<& SELF:sitename &>/menu/document_status.<& SELF:help_text_language &>.html')"><img src="/grafik/admin/spm.gif" WIDTH=12 HEIGHT=16 border=0></a>
% }
</TD></TR>
</%method>
%
<%method menu_entry>
<%args>
$marker=>undef
$markerlast=>undef
$extra=>''
$title
$link=>undef
$class=>'sublevel'
$target=>undef
$tooltip=>undef
$msgify=>1
$ghosted=>0
</%args>
%
<%init>
$link=~s/ /%20/g if (defined $link);
</%init>
%
<TR><TD colspan=2 colspan=2 CLASS="<% $class %>">
% if( $marker and !$markerlast) {
<% $marker %>
% }
<% $extra %>
% if( $link and !$ghosted ) {
<A HREF="<% $link %>"
%   if ($target) {
 TARGET="$target"
%   }
%   if ($tooltip) {
 TITLE="<% $tooltip %>"
%   }
>
% } elsif ($ghosted) {
<span class="ghosted">
% }
% if( $msgify ) {
<& SELF:msg, text=>$title &>
% }
% else {
<% $title %>
% }
% if( $link and !$ghosted ) {
</A>
% } elsif ($ghosted) {
</span>
% }
% if( $marker and $markerlast) {
<% $marker %>
% }
</TD></TR>
<& SELF:menu_left_separator &>
</%method>
%
<%method menu_box_end>
</%method>
%
<%method htmlencode>
<%args>
$text
</%args>
% my $out=Apache::Util::escape_html($text);
<% $out %>
</%method>
%
<%method split_date_time>
<%args>
$string
</%args>
<%perl>
if ($string =~ /^(\d{4})-(\d{2})-(\d{2}) (\d{2}):(\d{2})/) {
    return ("$3.$2.$1", "$4:$5");
}
else {
    return ("Malformed", "date/time");
}
</%perl>
</%method>
%
<%method format_date>\
<%args>
$date
</%args>
<%perl>
$date=~s/:\d\d$//;
return $date;
</%perl>
</%method>
%
<%method get_doc_subdocs>
<%args>
$seq=>undef
$max=>undef
$docid=>undef
$sortvdoc=>undef
</%args>
<%perl>
my @subdocs=();
my $extra=0;
$docid ||= $doc->Id;

my $number_of_subdocs = $obvius->get_nr_of_subdocs($obvius->get_doc_by_id($docid));

# Find only the public or the latest version of the subdocs...
# Yatta - new handling of non-public searches in $obvius->search
# does this for us, so now can just call obvius->search :)

my $append = ($max ? "LIMIT $max" : undef);

my $vdocsubdocs = $obvius->search(
                                    [],
                                    "parent = $docid",
                                    sortvdoc=>($sortvdoc || $vdoc),
                                    public=>0,
                                    nothidden => (defined($seq) ? 1 : undef),
                                    needs_document_fields => ['parent', 'name'],
                                    append => $append
                                ) || [];
my $NOW = $r->notes('now');
foreach my $vdoc (@$vdocsubdocs) {
    $obvius->get_version_fields($vdoc);
    my $vdoc_seq=$vdoc->field('seq');
    my %marker;

    if( $vdoc->Public ) {
        my $expires = $vdoc->field('expires');
        if( defined $expires and $expires lt $NOW ) { # Expired
            $marker{expired}=1;
        } else {
            if( defined $vdoc_seq and ($vdoc_seq <= -1) ) {
                $marker{hidden}=1;
            }
        }
    } else {
        $marker{not_public}=1;
    }

    my $tooltip=$vdoc->Title;
    $tooltip=$vdoc->field('short_title') if (!$tooltip);

    my $title=$m->scomp('SELF:shorten', text=>($vdoc->field('short_title') or $vdoc->Title), len=>22);

    my $extra;
    my $vdoctype=$obvius->get_version_type($vdoc);
    $extra='<IMG SRC="/grafik/admin/image.gif" WIDTH="9" HEIGHT="9" ALT="I" BORDER="0"> ' if ($vdoctype->Name eq "Image");

    push @subdocs, {
                    %marker,
                    extra=>$extra,
                    title=>$title,
                    tooltip=>$tooltip,
                    link=>$vdoc->param('Name') . "/",
                    msgify=>0,
                    seq=>$vdoc_seq,
                    docid=>$doc->Id
            };
}

$extra = $number_of_subdocs - scalar(@subdocs);
return \@subdocs, $extra;
</%perl>
</%method>
%
<%init>
$prefix=$r->notes('prefix');
$uri=$r->notes('uri');
$obvius=$r->pnotes('obvius');
$doc=$r->pnotes('document');

$obvius->log->debug(">>> /autohandler ($prefix$uri) [$doc]");
$obvius->log->debug(">>> /autohandler (obvius_version: $obvius_version)") if ($obvius_version);

if ($obvius_version) {
    if ($obvius_version eq "latest") {
	$vdoc = $obvius->get_latest_version($doc);
    } else {
	$vdoc = $obvius->get_version($doc, $obvius_version);
    }
}

unless ($vdoc) {
    $vdoc=$obvius->get_public_version($doc);
    $vdoc=$obvius->get_latest_version($doc) unless ($vdoc);
    $obvius_version = $vdoc->Version;
}
$obvius->get_version_fields($vdoc);

print STDERR "Main autohandler\n";
if(!defined($vdoc)) {
    $m->clear_and_abort(404);
}
$doctype=$obvius->get_version_type($vdoc);
$r->pnotes('version' =>$vdoc);
$r->pnotes('doctype' =>$doctype);

# Default language 'da':
$r->pnotes('site')->set_language_preferences($r, 'da');

# help-webserver:

my $helpserver = $obvius->config->param('HELP_SERVER');
if ($helpserver) {
    $r->notes('helpserver'=>"$helpserver");
} else {
    $r->notes('helpserver'=>'help.aparte-test.dk');
}

# Don't cache this:
$r->no_cache(1);
</%init>
