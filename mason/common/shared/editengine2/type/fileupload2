<%method block>\
<& util/label, name=>$prefix . $field->{name}, label=>$field->{label}, field=>$field &>
<& /shared/msg, text=>'Current value' &>: <% $value->{value} |h %>
%if($value->{value}) {
<input type="hidden" name="obvius_upload_<% $field->{name} %>_old_value" value="<% $value->{value} |h %>" />
<input type="checkbox" name="obvius_upload_<% $field->{name} %>_delete" /> <& /shared/msg, text=>'Delete' &>
%}
%if($field->{options} && $field->{options}->{get_image_dimensions_from_upload}) {
<input type="hidden" name="obvius_upload_<% $field->{name} %>_get_image_dimensions" value="1" />
%}
<br />
<input type="file" size="60" name="<% $prefix . $field->{name} |h %>" id="<% $prefix . $field->{name} |h %>" tabindex="10" />
<%args>
$prefix
$field
$value=>{}
$style
</%args>
%
</%method>
%
%
%
<%method inline>\
% if (exists $value->{value} and defined $value->{value}) {
<% $value->{value} %>\
% }
%
<%args>
 $value
</%args>
%
</%method>
%
%
<%args>
$data
$id
$validation
</%args>
%
<%once>
use Image::Magick;
use File::Type;

my %check_extension_types = map { $_ => 1 } qw(
    application/octet-stream
    application/x-zip-compressed
    application/zip
);
</%once>
<%init>
my @uploads=$r->upload;


my $value=$data->{$id};
my $new_upload = 0;
my $upload;

for(($r->upload)) {
    if($_->name =~ m!:${id}$!) {
        $upload = $_;
        last;
    }
}

my $full_path;
my $mimetype;

if ($upload && $upload->filename ne '' && $upload->size!=0 && $upload->fh) {
    $mimetype = $upload->type;
    if ($check_extension_types{$mimetype} and (-r "/etc/mime.types")) {
        my $ft = File::Type->new();
        my $slurp_data;
        $upload->slurp($slurp_data);
        $mimetype = $data->{mimetype} = $ft->mime_type($slurp_data);
    }
    $value = $m->scomp('/shared/place_file_in_upload', fh => $upload->fh, type => $mimetype, filename => $upload->filename);
    $full_path = $obvius->config->param('docs_dir') . '/' . $value;
    $new_upload = 1;
}

if (!$new_upload) {
    if($r->param('obvius_upload_' . $id . '_delete')) {
        $value = '';
        $data->{size} = 0;
        $data->{mimetype} = 'unknown/unknown';
        if ($r->param("obvius_upload_${id}_get_image_dimensions")) {
            $data->{width} = $data->{height} = 0;
        }
    } else {
        $value = $r->param('obvius_upload_' . $id . '_old_value');
        if ($value) {
            $full_path = $obvius->config->param('docs_dir') . '/' . $value;
        }
    }
}

if ($full_path) {
    $full_path =~ s{/+}{/}g;
    if (-e $full_path) {
        $data->{size} = -s $full_path;
        if ($r->param("obvius_upload_${id}_get_image_dimensions")) {
            eval {
                my $img = new Image::Magick();
                $img->Read($full_path);
                if (my $width = $img->Get('width')) {
                    $data->{width} = $width;
                }
                if (my $height = $img->Get('height')) {
                    $data->{height} = $height;
                }
                undef($img);
            };
            warn "ImageMagick problem: $@" if($@);
        }
    }
    if (!$mimetype && $value =~ m{/upload/(\w+/\w+)/}) {
        $mimetype = $1;
    }
    if ($mimetype) {
        $data->{mimetype} = $mimetype;
    }
}

$data->{$id} = $value;

return 'OK';
</%init>
<%doc>
This fieldtype is to be used with the FileUpload doctype, which is an alternative
to the standard upload doctype. It will take uploaded data and store it as a file
in docs/upload/ using the mason/common/shared/place_file_in_upload component.
</%doc>
