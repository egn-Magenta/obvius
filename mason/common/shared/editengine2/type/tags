<%method block>
<!--[if lte IE 7 ]>
<style type="text/css">
.tag {
  width: 220px;
}
<![endif]--> 
</style>
<script type="text/javascript">
var esc_html = function (txt) {
  return txt.replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/&/, "&amp;").replace('"', "&quot;");
};

function esc_sel(sel) {
    return sel.replace(/:/g, "\\:").replace(/\./g, "\\.");
}

function filter_non_permanent(tags) {
    var ret = [];
    for (var i = tags.length - 1; i >= 0; i--) {
      if (is_permanent_tag(tags[i])) {
        ret.push(tags[i]);
      }
    }
    return ret;
}

var permanent_tags;
eval(unescape(
    '<% "permanent_tags = { " .
       (join ',',
        map { s/'/\\'/; my $a = $_; Encode::from_to($a, "UTF-8", "latin-1"); "'$a': 1" } @permanent_tags) .
      "}"|u %>'));

function is_permanent_tag(tag) {
    return permanent_tags[tag];
}

function tag_name(el) {
   return $(el).find(".tag_name").text();
}

onsubmit_array.push(function () {
    var sel = $("#" + esc_sel("<% $send_tags_id |h %>"));
    $(".chosen_tag").each(function () {
           var txt = tag_name(this);
           sel.append('<option selected="selected" value="' + esc_html(txt) + '">x</option>');
    });
    return true;
});

function create_chosen(tag) {
  $(tag).removeClass('global_tag').addClass('chosen_tag');
  var t = $(tag).find(".tag_clearer");
  t.before(
    "<span class='remove_chosen'>X</span>"
  );
}

function received_chosen(ev, ui) {
  create_chosen(ui.item);
}

function received_global(ev, ui) {
  var txt = tag_name(ui.item);
  if (!is_permanent_tag(txt)) {
    $(ui.sender).sortable('cancel');
    return;
  }
  ui.item.removeClass('global_tag').addClass('chosen_tag').find(".remove_chosen").remove();
}

function add_tag_from_field() {
  var val = $("#add_tag_field").attr('value');
  $("#add_tag_field").attr('value', '');
  $("#chosen_tags").append('<div class="chosen_tag tag"><span class="tag_name">' +esc_html(val) +
                           '</span><span class="remove_chosen">X</span><div class="tag_clearer">'+
                           '</div></div>');
}


$(function () {
  $('.remove_chosen').live('click', function (ev) {
    ev.stopPropagation();
    var txt = $(this).siblings(".tag_name").text();
    $(this).parents(".chosen_tag").remove();
    if (is_permanent_tag(txt)) {
       $("#global_tags").append("<div class='global_tag tag'><span class='tag_name'>" + esc_html(txt) + "</span><div class='tag_clearer'></div></div>");
    }
  });
  $('#chosen_tags').sortable({receive: received_chosen,
                              connectWith: '#global_tags',
                              distance: 5});
  $('#global_tags').sortable({ receive: received_global,
                               connectWith: '#chosen_tags',
                               distance: 5
});
  $('#add_tag_field').autocomplete('/system/all_tags');
});

</script>
<div class="tags_widget <% $div_class %>" style="clear: both; width: 100%;">
<select multiple="multiple"
        id="<% $send_tags_id |h %>" name="<% $send_tags_id |h %>">
</select>

<& util/label, name => $prefix . $field->{name}, label => $field->{label}, field => $field &>
<div class="tag_div_container" style="width: 280px;">
  <h3><& /shared/trans, en => 'Global tags', da => 'Faste tags' &></h3>
  <div id="global_tags"
       style="height: 324px; margin-bottom: 0em; overflow-y: auto; overflow-x: hidden; cursor: move;"
       class="tag_container" >
% for my $tag (@standard_tags) {
    <div class="global_tag tag">
      <span class="tag_name"><% $tag |h %></span>
      <div class="tag_clearer"></div>
    </div>
% }
  </div>
  <div id="add_field_container">
    <h3>
      <& /shared/trans, da => "Tilføj frie tags", en => "Add free tag" &>
    </h3>
    <center>
      <input
         style="width: 170px;"
         type="text"
         id="add_tag_field" />
      <input type="button"
             value="<& /shared/trans, da => 'Tilføj', en => 'Add' &>"
             onclick="add_tag_from_field()" />
     </center>
  </div>
</div>
<div class="tag_div_container" style="width: 280px;">
  <h3><& /shared/trans, da => "Valgte tags", en => "Chosen tags" &></h3>
  <div id="chosen_tags" class="tag_container" style="overflow-y: auto; overflow-x: hidden; ">
% for my $tag (@document_tags) {
    <div class="chosen_tag tag">
      <span class="tag_name"><% $tag |h %></span>
      <span class="remove_chosen">
        X
      </span>
      <div class="tag_clearer"></div>
    </div>
% }
  </div>
</div>
<div style="clear:both"></div>
<br />
</div>
<%args>
$prefix
$field
$value=>{ value => [] }
$style
</%args>
<%init>
use Obvius::Tags;
my $lang;

my $standard_tag_color = "#000000";
my $global_tags_id = $prefix . $field->{name} . "_globals";
my $send_tags_id = $prefix . $field->{name};
my $text_id = $prefix . $field->{name} . "_text_field";

my $div_class = $field->{name};
$div_class =~ s![^\w\d]!!g;

eval {
  my $session = $r->pnotes('obvius_session');
  if (defined $session->{obvius_new_language}) {
     $lang = $session->{obvius_new_language};
  } else {
     $lang = $vdoc->Lang;
  }
};
if ($@) {
     warn $@;
     $lang = 'da';
}
my $tags = Obvius::Tags->new($obvius);
my @document_tags = @{ $value->{value} || [] };
my %document_tags = map { $_ => 1 } @document_tags;
my @global_document_tags;

my @csv;
my @permanent_tags = @{ $tags->get_tags($lang) };
my %permanent_tags = map { $_ => 1 } @permanent_tags;
my %seen;

for my $tag (@document_tags) {
     next if ($seen{$tag});
     $seen{$tag} = 1;

     if (exists $permanent_tags{$tag}) {
          $permanent_tags{$tag} = 0;
          push @global_document_tags, $tag;
     } else {
          push @csv, $tag;
     }
}

my $csv = join ',', @csv;

my @standard_tags = sort { lc $a cmp lc $b } grep { $permanent_tags{$_} } keys %permanent_tags;
@global_document_tags = sort { lc  $a cmp lc $b } @global_document_tags;
</%init>
</%method>
<%method inline>
<% $value->{value} |h %>
<%args>
$value
</%args>
</%method>

<%args>
$data
$id
$validation
</%args>
<%init>
use Encode;
my $tags = Obvius::Tags->new('obvius');

my $value = $data->{$id};
if (! ref $value ) {
   $value = [ $value ];
}

# Workaround for the horrible encoding-handling in obvius.
@$value = grep { $tags->validate_tag($_) } map { Encode::decode('latin-1', $_ ) }  @$value;
$data->{$id} = $value;
return 'OK';

</%init>
