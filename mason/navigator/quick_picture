%if($new_path) {
<script language="javascript">
    document.pageform.path.value = '<% $new_path %>';
    document.pageform.quick_picture.value = 0;
    document.pageform.method='GET';
    document.pageform.submit();
</script>
%} else {
<script language="javascript">
<!--
function pictureform_submit() {
    if(! document.pageform.title.value) {
        alert('<& SELF:msg, text=>'You must specify a title' &>');
        return;
    }
    if(! document.pageform.short_title.value) {
        document.pageform.short_title.value = document.pageform.title.value;
    }
    if(! document.pageform.image_data.value) {
        alert('<& SELF:msg, text=>'You must specify a picture' &>');
        return;
    }
    document.pageform.quick_picture.value = 1;
    document.pageform.method='post';
    document.pageform.enctype='multipart/form-data';
    document.pageform.submit();
}

var quality_list = [
                    [ 0, '0: <& SELF:msg, text=>'Lowest quality' &>' ],
                    [ 25, '25' ],
                    [ 50, '50' ],
                    [ 75, '75: <& SELF:msg, text=>'Standard quality' &>', 1 ],
                    [ 100, '100: <& SELF:msg, text=>'Highest quality' &>' ]
                ];

function change_scaleby() {
    var scaleby = document.pageform.scaleby;
    var new_value = scaleby.options[scaleby.selectedIndex].value;
    if(new_value.match(/\d+%/) && new_value != '100%') {
        document.pageform.new_width.value = new_value;
        document.pageform.new_height.value = new_value;
    } else {
        document.pageform.new_width.value = '';
        document.pageform.new_height.value = '';
        document.pageform.new_width.focus();
    }
}

function change_format() {
    var format = document.pageform.new_format;
    var quality = document.pageform.quality;

    var new_value = format.options[format.selectedIndex].value;
    if(new_value == 'jpeg' || new_value == 'png') {
        if(quality.options.length <= 1) {
            fill_select(quality, quality_list);
        }
    } else {
        empty_select(quality);
    }

}

function fill_select(select_obj, items) {
    for(var i=0;i < items.length; i++) {
        select_obj.options[select_obj.options.length] = new Option(items[i][1], items[i][0]);
        if(items[i][2])
            select_obj.selectedIndex = i;
    }
}

function empty_select(select_obj) {
    while(select_obj.options[0]) {
        select_obj.options[0] = null;
    }
}

function adjust_bredde() {
    var new_value = document.pageform.new_width.value;
    var test = new_value.match(/^(\d+)(%?)$/)
    if(test && test[2] && document.pageform.new_height.value == '') {
        document.pageform.new_height.value = new_value;
    } else {
        if(new_value == '')
            adjust_hoejde();
    }
    document.pageform.scaleby.selectedIndex = 8;
}

function adjust_hoejde() {
    var new_value = document.pageform.new_height.value;
    var test = new_value.match(/^(\d+)(%?)$/)
    if(test && test[2] && document.pageform.new_width.value == '') {
        document.pageform.new_width.value = new_value;
    } else {
        if(new_value == '')
            adjust_bredde();
    }
    document.pageform.scaleby.selectedIndex = 8;
}
// -->
</script>

<table border="0" cellpadding="5" align="left">
<tr>
<td>

<h2><& SELF:msg, text=>'New picture' &></h2>
%if($error) {
    <strong><& SELF:msg, text=>'There was an error while creating the picture' &>:</strong><br>
    <% $error %><br>
    <br>
%}

<input type="hidden" name="go" value="">

<& SELF:msg, text=>'Picture title' &><br>
<input type="text" name="title" size=50><br>
<br>
<& SELF:msg, text=>'Short title' &><br>
<input type="text" name="short_title" size=50><br>
<br>
%if($show_teaser) {
<& SELF:msg, text=>'Teaser' &><br>
<textarea rows="4" cols="50" name="teaser"></textarea><br>
<br>
%}
<& SELF:msg, text=>'Picture file' &><br>
<input type="file" size="40" name="image_data" accept="image/*">
<br>
<br>
<& SELF:msg, text=>'Permissions' &><br>
<& SELF:msg, text=>'User' &>: <% $obvius->{USER} %> &nbsp;
<& SELF:msg, text=>'Group' &>:
<select name="group">
%for(@$user_groups) {
    <option value="<% $_->{grp} %>"><% $obvius->{GROUPS}->{$_->{grp}}->{name} %>  </option>
%}
</select>
<br>
<br>
<input type="button" value="<& SELF:msg, text=>'Upload picture' &>" onclick="pictureform_submit()">

</td>
</tr>
<tr>
    <td><img src="/grafik/admin/1x1black.gif" alt="" width="100%" height="1"></td>
</tr>
<tr>
    <td>
        <& SELF:msg, text=>'Scale picture to' &>:<br>
        <select name="scaleby" onchange="change_scaleby()">
            <option value="200%">200%</option>
            <option value="175%">175%</option>
            <option value="150%">150%</option>
            <option value="125%">125%</option>
            <option value="100%" SELECTED><& SELF:msg, text=>'Original size' &></option>
            <option value="75%">75%</option>
            <option value="50%">50%</option>
            <option value="25%">25%</option>
            <option value=""><& SELF:msg, text=>'Manually specified below' &></option>
        </select>
    </td>
</tr>
<tr>
    <td>
        <& SELF:msg, text=>'Width' &>: <input type="text" name="new_width" size="6" onchange="adjust_bredde()">
        &nbsp;
        <& SELF:msg, text=>'Height' &>: <input type="text" name="new_height" size="6" onchange="adjust_hoejde()">
    </td>
</tr>
<tr>
    <td>
        <& SELF:msg, text=>'Upload in format' &>:<br>
        <select name="new_format" onchange="change_format()">
            <option value="" SELECTED><& SELF:msg, text=>'Original format' &></option>
            <option value="jpeg">JPEG</option>
            <option value="gif">GIF</option>
            <option value="png">PNG</option>
        </select>
    </td>
</tr>
<tr>
    <td>
        <& SELF:msg, text=>'Choose quality (only JPEG and PNG)' &>:<br>
        <select name="quality">
        </select>
    </td>
</tr>
</table>
%}
<%args>
$path
</%args>
<%once>
my $image_doctype = $obvius->get_doctype_by_name('Image');
</%once>
<%init>
# Disable cache
$r->no_cache(1);

my $new_path; # When we have created the picture, go here..

my $parent = $obvius->lookup_document($path);
my $parent_version = $obvius->get_public_version($parent) || $obvius->get_latest_version($parent);
my $parent_title = $obvius->get_version_field($parent_version, 'title');

my $user = $obvius->{USERS}->{$obvius->{USER}};
my $user_groups = $obvius->{USER_GROUPS}->{$user->{id}} || [ {grp => 1} ];

my $show_teaser;
$show_teaser = 1 if(defined($image_doctype->{FIELDS}->{TEASER}));

my $error;

if(my $name = $r->param('image_data')) {
    if (my $upload=$r->upload('image_data')) {
        if ($upload->filename ne '' and $upload->size!=0 and my $fh=$upload->fh) {
            my ($value, $mimetype) = $image_doctype->transform_image_at_upload(
                                                            \$fh,
                                                            $r->param('new_width'),
                                                            $r->param('new_height'),
                                                            $r->param('new_format'),
                                                            $r->param('quality')
                                                        );
            my $fields = new Obvius::Data;


            # Set default values
            for(keys %{$image_doctype->{FIELDS}}) {
                $fields->param($_ => $image_doctype->{FIELDS}->{$_}->{DEFAULT_VALUE});
            }

            $fields->param('data' => $value);
            $fields->param('mimetype' => $mimetype ? $mimetype : $upload->type);
            $fields->param('size' => length($value));

            my ($width, $height)=imgsize(\$value);
            $fields->param('width' => $width);
            $fields->param('height' => $height);

            my $docdate = $r->notes('now');
            $docdate =~ s/\d\d:\d\d:\d\d$/00:00:00/;
            $fields->param('docdate' => $docdate);

            $fields->param(title => $r->param('title'));
            $fields->param(short_title => $r->param('short_title'));

            my $owner = $obvius->{USERS}->{$obvius->{USER}}->{id};
            my $group = $r->param('group') || 1;

            # Adjust name
            $name =~ s!^.*[/\\]([^/\\]+)$!$1!; # Only last part of filename.
            $name =~ s/æ/ae/g;
            $name =~ s/ø/oe/g;
            $name =~ s/å/aa/g;
            $name =~ s/Æ/AE/g;
            $name =~ s/Ø/OE/g;
            $name =~ s/Å/AA/g;
            $name =~ s/[^a-zA-Z0-9._-]/_/g;

            if($mimetype) {
                my ($extension) = ($mimetype =~ m#/(\w+)$#); # Part of mimetype after /
                $name =~ s/\.[^\.]+$/.$extension/;
            }

            if($obvius->get_doc_by_name_parent($name, $parent->Id)) {
                $error="Der findes allerede et dokument med det navn";
            } else {
                my $create_error;
                my ($docid, $version) = $obvius->create_new_document($parent, $name, $image_doctype->Id, 'da', $fields, $owner, $group, \$create_error);
                print STDERR "Docid: $docid, version: '$version'\n";
                if($create_error) {
                    $error = $create_error;
                } else {
                    # publish stuff
                    my $new_doc = $obvius->get_doc_by_id($docid);
                    die "No doc?!?" unless($new_doc);
                    my $new_vdoc = $obvius->get_version($new_doc, $version);
                    die "No vdoc?!?" unless($new_vdoc);
                    $obvius->get_version_fields($new_vdoc, 255, 'PUBLISH_FIELDS');
                    my $publish_fields = $new_vdoc->publish_fields;
                    $publish_fields->param(PUBLISHED => strftime('%Y-%m-%d %H:%M:%S', localtime));

                    # XXX Always in subscription?
                    $publish_fields->param(in_subscription => 0);

                    my $publish_error;
                    $obvius->publish_version($new_vdoc, \$publish_error);
                    if($publish_error) {
                        $error = $publish_error;
                    } else {
                        $new_path = $obvius->get_doc_uri($new_doc);
                    }
                }
            }
        } else {
            $error="Kunne ikke finde uploadet billeddata";
        }
    } else {
        $error="Kunne ikke finde uploadet billeddata";
    }
}
</%init>
<%once>
use Image::Size;
use POSIX qw(strftime);
</%once>
